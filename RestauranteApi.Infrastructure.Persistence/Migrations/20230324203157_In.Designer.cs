// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestauranteApi.Infrastructure.Persistence.Contexts;

#nullable disable

namespace RestauranteApi.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230324203157_In")]
    partial class In
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RestauranteApi.Core.Domain.Entities.Ingrediente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlatoID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("created")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("modifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("modifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("PlatoID");

                    b.ToTable("Ingredientes", (string)null);
                });

            modelBuilder.Entity("RestauranteApi.Core.Domain.Entities.Mesa", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Descipcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("created")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("modifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("modifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Mesas", (string)null);
                });

            modelBuilder.Entity("RestauranteApi.Core.Domain.Entities.Orden", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MesaID")
                        .HasColumnType("int");

                    b.Property<int?>("Subtotal")
                        .HasColumnType("int");

                    b.Property<DateTime?>("created")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("modifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("modifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("MesaID");

                    b.ToTable("Ordenes", (string)null);
                });

            modelBuilder.Entity("RestauranteApi.Core.Domain.Entities.Plato", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Categoría")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrdenID")
                        .HasColumnType("int");

                    b.Property<int?>("Precio")
                        .HasColumnType("int");

                    b.Property<DateTime?>("created")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("modifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("modifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("OrdenID");

                    b.ToTable("Platos", (string)null);
                });

            modelBuilder.Entity("RestauranteApi.Core.Domain.Entities.Ingrediente", b =>
                {
                    b.HasOne("RestauranteApi.Core.Domain.Entities.Plato", "Plato")
                        .WithMany("Ingredientes")
                        .HasForeignKey("PlatoID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Plato");
                });

            modelBuilder.Entity("RestauranteApi.Core.Domain.Entities.Orden", b =>
                {
                    b.HasOne("RestauranteApi.Core.Domain.Entities.Mesa", "Mesa")
                        .WithMany("Ordenes")
                        .HasForeignKey("MesaID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Mesa");
                });

            modelBuilder.Entity("RestauranteApi.Core.Domain.Entities.Plato", b =>
                {
                    b.HasOne("RestauranteApi.Core.Domain.Entities.Orden", "Orden")
                        .WithMany("Platos")
                        .HasForeignKey("OrdenID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Orden");
                });

            modelBuilder.Entity("RestauranteApi.Core.Domain.Entities.Mesa", b =>
                {
                    b.Navigation("Ordenes");
                });

            modelBuilder.Entity("RestauranteApi.Core.Domain.Entities.Orden", b =>
                {
                    b.Navigation("Platos");
                });

            modelBuilder.Entity("RestauranteApi.Core.Domain.Entities.Plato", b =>
                {
                    b.Navigation("Ingredientes");
                });
#pragma warning restore 612, 618
        }
    }
}
